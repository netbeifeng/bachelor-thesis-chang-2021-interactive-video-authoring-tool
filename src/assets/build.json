{"fonts":[{"fid":1,"type":"WebFont","isOnline":true,"path":"https://fonts.googleapis.com/css2?family=Zilla+Slab+Highlight&display=swap"},{"fid":2,"type":"LocalFont","isOnline":false,"path":"font.ttf"}],"slides":[{"sid":1,"startTime":0,"duration":100,"name":"Part One","page":1,"videos":[{"transformations":[{"elementType":"video","startTime":16,"duration":3,"elementId":24,"type":"slide","toPosition":{"x":800,"y":300},"toScale":null},{"elementType":"video","startTime":12,"duration":3,"elementId":24,"type":"scale","toPosition":null,"toScale":{"x":1.2,"y":1.2}}],"vid":24,"startTime":10,"duration":10,"emphasisTime":-1,"path":"video1.mp4","isOnline":false,"position":{"x":200,"y":400},"height":500,"width":900,"zIndex":1},{"transformations":[],"vid":25,"startTime":20,"duration":10,"emphasisTime":-1,"path":"https://www.youtube.com/embed/jzTEx90xbAM","isOnline":true,"position":{"x":200,"y":700},"height":500,"width":900,"zIndex":1}],"animations":[{"type":"cursor","startTime":10,"duration":3,"moveTo":{"x":100,"y":200}}],"images":[],"quizzes":[{"transformations":[],"qid":64,"type":"TF","startTime":15,"duration":20,"position":{"x":100,"y":100},"emphasisTime":-1,"height":200,"width":500,"questionContent":"Is it right?","correctAnswer":"True","tip":"Because ... XXX","zIndex":1}],"customes":[{"transformations":[],"cid":59,"startTime":30,"duration":10,"emphasisTime":-1,"path":"grau.html","position":{"x":500,"y":400},"zIndex":1,"htmlContent":"<div class='customComponent'><style>\r\n    #GrayMatrix {\r\n        position: absolute;\r\n        /* width: 1000px;\r\n        height: 400px; */\r\n        /* background-color: coral; */\r\n    }\r\n\r\n    .GrayMatrix_ColorUnit {\r\n        position: absolute;\r\n        width: 100px;\r\n        height: 100px;\r\n        border: 1px black solid;\r\n        user-select: none;\r\n        cursor: pointer;\r\n        z-index: 1;\r\n    }\r\n\r\n    .GrayMatrix_ColorUnit:hover {\r\n        border: 1px darkorange solid;\r\n        z-index: 2;\r\n    }\r\n\r\n    .GrayMatrix_ValueUnit {\r\n        position: absolute;\r\n        font-size: 28px;\r\n        font-family: 'Consolas';\r\n        width: 100px;\r\n        height: 100px;\r\n        border: 1px black solid;\r\n        user-select: none;\r\n    }\r\n\r\n    #GrayMatrix_Value {\r\n        position: absolute;\r\n        left: 650px;\r\n    }\r\n\r\n    .value_Text {\r\n        display: block;\r\n        padding: 8px;\r\n    }\r\n\r\n    #input_Div {\r\n        background-color: rgba(136, 136, 136, 0.4);\r\n        font-family: 'Consolas';\r\n        padding: 2px 4px;\r\n        border-radius: 25px;\r\n        font-size: 20px;\r\n        width: 55px;\r\n        position: absolute;\r\n        left: 550px;\r\n        user-select: none;\r\n    }\r\n\r\n    #input_Div_White {\r\n        background-color: white;\r\n        padding-left: 15px;\r\n        padding-top: 15px;\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n    }\r\n\r\n    #input_Div_Black {\r\n        background-color: black;\r\n        padding-left: 15px;\r\n        padding-top: 15px;\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        color: white;\r\n    }\r\n\r\n    input[type=range][orient=vertical] {\r\n        margin: 16px 22px;\r\n        writing-mode: bt-lr;\r\n        -webkit-appearance: slider-vertical;\r\n        width: 10px;\r\n        height: 250px;\r\n        padding: 0 5px;\r\n    }\r\n\r\n    #panel {\r\n        position: absolute;\r\n        left: 1200px;\r\n    }\r\n\r\n    .panel_circle {\r\n        width: 80px;\r\n        height: 80px;\r\n        border-radius: 50%;\r\n        cursor: pointer;\r\n        margin-bottom: 60px;\r\n    }\r\n\r\n    .panel_circle label {\r\n        font-family: 'Bahnschrift';\r\n        display: block;\r\n        width: 80%;\r\n        text-align: center;\r\n        margin: auto;\r\n        padding-top: 28px;\r\n        font-size: 18px;\r\n        font-weight: bold;\r\n        cursor: pointer;\r\n    }\r\n\r\n    #grayButton {\r\n        background-color: #888;\r\n        border: 1px #888 solid;\r\n    }\r\n\r\n    #grayButton:hover {\r\n        background-color: white;\r\n    }\r\n\r\n    #binButton {\r\n        background-color: #000;\r\n        color: white;\r\n        border: 1px#000 solid;\r\n    }\r\n\r\n    #binButton:hover {\r\n        background-color: white;\r\n        color: black;\r\n    }\r\n\r\n    #revertButton {\r\n        background-color: darkorange;\r\n        color: white;\r\n        border: 1px darkorange solid;\r\n    }\r\n\r\n    #revertButton label {\r\n        padding-top: 20px;\r\n    }\r\n\r\n    #revertButton:hover {\r\n        background-color: white;\r\n        color: darkorange;\r\n        border: 1px darkorange solid;\r\n    }\r\n</style>\r\n\r\n<div>\r\n    <h3 style=\"font-family: Arial, Helvetica, sans-serif;\">Array: </h3>\r\n\r\n    <div id=\"GrayMatrix\">\r\n        <div id=\"GrayMatrix_Color\">\r\n        </div>\r\n        <div id=\"GrayMatrix_Value\">\r\n        </div>\r\n    </div>\r\n    <div id=\"input_Div\" style=\"visibility: hidden;\">\r\n        <div id=\"input_Div_White\">0</div>\r\n        <div id=\"input_Div_Black\">255</div>\r\n    </div>\r\n    <div id=\"panel\">\r\n        <div class=\"panel_circle\" id=\"grayButton\"><label>Grau</label></div>\r\n        <div class=\"panel_circle\" id=\"binButton\"><label>Bin</label></div>\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n    console.log('Custom Component!');\r\n    let isGray = true;\r\n    let currentSelectUnit = undefined;\r\n    let currentSelectColorUnitStyle = undefined;\r\n    let currentSelectValueUnitStyle = undefined;\r\n    let colorContainer = document.getElementById('GrayMatrix_Color');\r\n    let valueContainer = document.getElementById('GrayMatrix_Value');\r\n    let inputContainer = document.getElementById('input_Div');\r\n    document.getElementById('binButton').onclick = () => {\r\n        isGray = false;\r\n        for (let child of colorContainer.children) {\r\n            let gray = -1;\r\n            if (child.dataset.gray > 128) {\r\n                gray = 255;\r\n            } else {\r\n                gray = 0;\r\n            }\r\n            child.setAttribute('style', `background-color: rgb(${gray}, ${gray}, ${gray}); left: ${child.style.left}; top: ${child.style.top};`)\r\n        }\r\n\r\n        for (let child of valueContainer.children) {\r\n            let gray = -1;\r\n            if (child.dataset.gray > 128) {\r\n                gray = 255;\r\n            } else {\r\n                gray = 0;\r\n            }\r\n            child.firstChild.innerHTML = gray;\r\n            child.setAttribute('style', `left: ${child.style.left}; top: ${child.style.top}; border: 1px black solid; z-index: 1;`);\r\n        }\r\n\r\n        currentSelectUnit = undefined;\r\n        currentSelectColorUnitStyle = undefined;\r\n        currentSelectValueUnitStyle = undefined;\r\n        inputContainer.style.visibility = 'hidden';\r\n        if (document.getElementById('value_Slider')) {\r\n            document.getElementById('value_Slider').remove();\r\n        }\r\n    };\r\n\r\n    document.getElementById('grayButton').onclick = () => {\r\n        isGray = true;\r\n        for (let child of colorContainer.children) {\r\n            child.setAttribute('style', `background-color: rgb(${child.dataset.gray}, ${child.dataset.gray}, ${child.dataset.gray}); left: ${child.style.left}; top: ${child.style.top};`)\r\n        }\r\n        for (let child of valueContainer.children) {\r\n            child.firstChild.innerHTML = child.dataset.gray;\r\n            child.setAttribute('style', `left: ${child.style.left}; top: ${child.style.top}; border: 1px black solid; z-index: 1;`);\r\n        }\r\n        currentSelectUnit = undefined;\r\n        currentSelectColorUnitStyle = undefined;\r\n        currentSelectValueUnitStyle = undefined;\r\n        inputContainer.style.visibility = 'hidden';\r\n        if (document.getElementById('value_Slider')) {\r\n            document.getElementById('value_Slider').remove();\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < 5; i++) {\r\n        for (let j = 0; j < 4; j++) {\r\n            let valueUnit = document.createElement('div');\r\n            let colorUnit = document.createElement('div');\r\n            colorUnit.className = 'GrayMatrix_ColorUnit';\r\n            colorUnit.id = `colorUnit_${i}_${j}`;\r\n            colorUnit.onclick = (e) => {\r\n\r\n                if (currentSelectUnit) {\r\n                    currentSelectUnit.setAttribute('style', currentSelectColorUnitStyle);\r\n                    let i = currentSelectUnit.id.split('_')[1];\r\n                    let j = currentSelectUnit.id.split('_')[2];\r\n                    document.getElementById(`valueUnit_${i}_${j}`).setAttribute('style', currentSelectValueUnitStyle);\r\n                    if (document.getElementById('value_Slider')) {\r\n                        document.getElementById('value_Slider').remove();\r\n                    }\r\n                }\r\n                currentSelectUnit = colorUnit;\r\n\r\n                currentSelectColorUnitStyle = colorUnit.getAttribute('style');\r\n                colorUnit.setAttribute('style', currentSelectColorUnitStyle + 'border: 1px darkorange solid; z-index: 2;');\r\n                let valueUnit = document.getElementById(`valueUnit_${i}_${j}`);\r\n                currentSelectValueUnitStyle = valueUnit.getAttribute('style');\r\n                valueUnit.setAttribute('style', currentSelectValueUnitStyle + 'border: 1px darkorange solid; z-index: 2;');\r\n                if (isGray) {\r\n                    let slider = document.createElement('input');\r\n                    slider.id = \"value_Slider\";\r\n                    slider.setAttribute('type', `range`);\r\n                    slider.setAttribute('min', `0`);\r\n                    slider.setAttribute('value', `${valueUnit.innerText}`);\r\n                    slider.setAttribute('max', `256`);\r\n                    slider.setAttribute('orient', `vertical`);\r\n                    slider.oninput = (e) => {\r\n                        let gray = e.target.value;\r\n                        colorUnit.setAttribute('style', `background-color:rgb(${gray},${gray},${gray}); left: ${colorUnit.style.left}; top: ${colorUnit.style.top};` + 'border: 1px darkorange solid; z-index: 2;');\r\n                        currentSelectUnit = colorUnit;\r\n                        currentSelectColorUnitStyle = `background-color:rgb(${gray},${gray},${gray}); left: ${colorUnit.style.left}; top: ${colorUnit.style.top};` + 'border: 1px black solid; z-index: 1;';\r\n                        valueUnit.firstChild.innerText = `${e.target.value}`;\r\n                    }\r\n                    inputContainer.style.visibility = 'visible';\r\n                    document.getElementById('input_Div_White').after(slider);\r\n                }\r\n            }\r\n            valueUnit.className = 'GrayMatrix_ValueUnit';\r\n            valueUnit.id = `valueUnit_${i}_${j}`;\r\n            let gray = -1;\r\n            if (j == 2 && i == 1) {\r\n                gray = 109;\r\n            } else if (j == 1 && i == 1) {\r\n                gray = 0;\r\n            } else if (j == 1 && i == 0) {\r\n                gray = 41;\r\n            } else if (j == 2 && i == 0) {\r\n                gray = 148;\r\n            } else {\r\n                gray = (Math.floor(Math.random() * 256) * 0.299 + Math.floor(Math.random() * 256) * 0.299 + Math.floor(Math.random() * 256) * 0.114).toFixed(0);\r\n            }\r\n            colorUnit.style.backgroundColor = `rgb(${gray},${gray},${gray})`;\r\n            colorUnit.dataset.gray = gray;\r\n            valueUnit.innerHTML = `<label class='value_Text'>${gray}</label>`;\r\n            valueUnit.style.left = `${i * 100}px`;\r\n            valueUnit.style.top = `${j * 100}px`;\r\n            valueUnit.dataset.gray = gray;\r\n            colorUnit.style.left = `${i * 100}px`;\r\n            colorUnit.style.top = `${j * 100}px`;\r\n\r\n            colorContainer.appendChild(colorUnit);\r\n            valueContainer.appendChild(valueUnit);\r\n        }\r\n    }\r\n</script></div>"}],"graphics":[{"transformations":[],"type":"circle","startTime":1,"duration":19,"emphasisTime":-1,"position":{"x":50,"y":700},"height":100,"width":100,"strokeColor":"firebrick","strokeWidth":4,"zIndex":1},{"transformations":[],"type":"rectangle","startTime":1,"duration":19,"emphasisTime":-1,"position":{"x":200,"y":700},"height":50,"width":50,"strokeColor":"firebrick","strokeWidth":4,"zIndex":1}],"texts":[{"transformations":[],"tid":11,"startTime":0,"duration":60,"content":"**Intuitiv**: 2D-Array mit ~~Helligkeitswerten~~ als (unsigned) Integer [google](https://www.google.de)","position":{"x":90,"y":220},"emphasisTime":30,"fontSize":36,"fontColor":"#000000","fontFamily":"Arial, Helvetica, sans-serif","zIndex":1},{"transformations":[],"tid":14,"startTime":0,"duration":60,"content":"**Test**: What? Is this font `Thread.sleep(500);`{.java} \n```js\nconsole.log('Hello World');\n```\n $\\displaystyle= \\frac{k(k+1)+2(k+1)}{2}$ \n `x=4`{.js} \n::: warning\n*here be dragons*\n:::","position":{"x":700,"y":400},"emphasisTime":-1,"fontSize":36,"fontColor":"#000000","fontFamily":"CustomFont2","zIndex":1},{"transformations":[],"tid":18,"startTime":0,"duration":60,"content":"**Test**: What? \n```js\nconsole.log('Hello World');\n```\nIs this font","position":{"x":700,"y":700},"emphasisTime":-1,"fontSize":36,"fontColor":"#000000","fontFamily":"Zilla Slab Highlight","zIndex":1},{"transformations":[],"tid":118,"startTime":0,"duration":100,"content":"\nUnordered\n\n+ Create a list by starting a line with `+`, `-`, or `*`\n+ Sub-lists are made by indenting 2 spaces:\n  - Marker character change forces new list start:\n    * Ac tristique libero volutpat at\n    + Facilisis in pretium nisl aliquet\n    - Nulla volutpat aliquam velit\n+ Very easy!\n\nOrdered\n\n1. Lorem ipsum dolor sit amet\n2. Consectetur adipiscing elit\n3. Integer molestie lorem at massa\n","position":{"x":50,"y":100},"emphasisTime":-1,"fontSize":36,"fontColor":"#000000","fontFamily":"Arial, Helvetica, sans-serif","zIndex":1},{"transformations":[],"tid":111,"startTime":0,"duration":100,"content":"\n#### tasklist \n- [x] foo\n  - [ ] bar\n  - [x] baz\n- [ ] bim","position":{"x":1000,"y":50},"emphasisTime":-1,"fontSize":36,"fontColor":"#000000","fontFamily":"Arial, Helvetica, sans-serif","zIndex":1}]},{"sid":2,"startTime":100,"duration":100,"name":"Part Two","page":2,"videos":[],"animations":[],"images":[{"transformations":[],"iid":22,"startTime":100,"duration":5,"emphasisTime":-1,"path":"image.png","isOnline":false,"position":{"x":300,"y":400},"height":100,"width":100,"zIndex":1}],"quizzes":[],"customes":[],"graphics":[],"texts":[]},{"sid":3,"startTime":200,"duration":30,"name":"Part Three","page":3,"videos":[],"animations":[],"images":[{"transformations":[],"iid":23,"startTime":200,"duration":30,"emphasisTime":-1,"path":"https://upload.wikimedia.org/wikipedia/commons/7/77/Hsh_logo.png","isOnline":true,"position":{"x":100,"y":200},"height":200,"width":300,"zIndex":1}],"quizzes":[],"customes":[],"graphics":[],"texts":[]},{"sid":4,"startTime":230,"duration":50,"name":"Part Four","page":4,"videos":[],"animations":[],"images":[],"quizzes":[{"transformations":[],"qid":68,"type":"MC","startTime":230,"duration":50,"position":{"x":200,"y":500},"emphasisTime":-1,"height":500,"width":500,"questionContent":"f(2,1) = ?","correctAnswer":"109","wrongAnswers":["41","0","148"],"tip":"Index von r,c fängt mit 0 an.","zIndex":1}],"customes":[],"graphics":[],"texts":[]}],"title":"Digitale Grauwertbilder","course":"Computergrafik 2","chapter":"Kapitel 3: Bildrepräsentation und Punktoperationen","date":"2019-07-19 16:41:10","author":"Max Muster","semester":"SoSe 2021","audio":"scene_1.mp3","subtitle":"subtitle_1.vtt"}